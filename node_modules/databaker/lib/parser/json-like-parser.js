// const T_WHITESPACE = /^\s+/
// const T_STRING = /^[a-zA-Z0-9-_]+/
// /*
// array: '[' ']'
//   | '[' values ']'
// values: value
//   | value ',' values
// object: '{' '}'
//   | '{' objectpairs '}'
// objectpairs: objectpair
//   | objectpairs ',' objectpair
// objectpair: objectkey ':' value
// objectkey: T_STRING
//  */
// let buf = null
// let match = null
// function white() {
//   while (1) {
//     match = buf.match(T_WHITESPACE)
//     if (!match) {
//       return
//     } else {
//       buf = buf.slice(match[0].length)
//     }
//   }
// }
// function next(cnt = 1) {
//   buf = buf.slice(cnt)
//   white()
// }
// /*
// value: T_STRING
//   | T_NUMBER
//   | T_TRUE
//   | T_FALSE
//   | T_NULL
//   | T_INFINITY
//   | T_NINFINITY
//   | T_NAN
//   | T_REGEXP
//   | array
//   | object
//  */
// function value() {
//   white()
//   match = buf.match(T_STRING)
//   if (match) {
//     const t = match[0]
//     next(t.length)
//     return t // .replace(/^"|"$/g, "").replace(/\\\"/g, "\"")
//   }
//   switch (buf[0]) {
//     case "[":
//      return array()
//     case "{":
//      return object()
//   }
//   error("value")
// }
// function array() {
//   next() // resolve [
//   if (buf[0] === "]") { // empty array
//     next()
//     return []
//   }
//   const result = [value()]
//   white()
//   while (buf[0] === ",") {
//     next()
//     result.push(value())
//     white()
//   }
//   if (buf[0] === "]") {
//     next()
//     return result
//   }
//   throw error("]")
// }
// function object() {
//   next() // resolve {
//   if (buf[0] === "}") { // empty object
//     next()
//     return {}
//   }
//   const result = objectpair()
//   white()
//   while (buf[0] === ",") {
//     next()
//     Object.assign(result, objectpair())
//     white()
//   }
//   if (buf[0] === "}") {
//     next()
//     return result
//   }
//   throw error("}")
// }
// function objectpair() {
//   match = buf.match(T_STRING)
//   if (match) {
//     const t = match[0]
//     next(t.length)
//     const key = t.replace(/^"|"$/g, "").replace(/\\\"/g, "\"")
//     if (buf[0] === "=") {
//       next()
//       return {[key]: value()}
//     }
//     throw error("=")
//   }
//   throw error("object key")
// }
// function error(expected) {
//   throw new Error(`expected ${expected}, unexpected ${buf[0]}`)
// }
// function parse(ctx) {
//   buf = ctx
//   const result = value()
//   white()
//   if (buf.length) {
//     throw error("EOF")
//   }
//   return result
// }
// module.exports = {
//   parse,
// }
"use strict";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJzZXIvanNvbi1saWtlLXBhcnNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGNvbnN0IFRfV0hJVEVTUEFDRSA9IC9eXFxzKy9cbi8vIGNvbnN0IFRfU1RSSU5HID0gL15bYS16QS1aMC05LV9dKy9cblxuLy8gLypcbi8vIGFycmF5OiAnWycgJ10nXG4vLyAgIHwgJ1snIHZhbHVlcyAnXSdcbi8vIHZhbHVlczogdmFsdWVcbi8vICAgfCB2YWx1ZSAnLCcgdmFsdWVzXG5cbi8vIG9iamVjdDogJ3snICd9J1xuLy8gICB8ICd7JyBvYmplY3RwYWlycyAnfSdcblxuLy8gb2JqZWN0cGFpcnM6IG9iamVjdHBhaXJcbi8vICAgfCBvYmplY3RwYWlycyAnLCcgb2JqZWN0cGFpclxuXG4vLyBvYmplY3RwYWlyOiBvYmplY3RrZXkgJzonIHZhbHVlXG4vLyBvYmplY3RrZXk6IFRfU1RSSU5HXG4vLyAgKi9cblxuLy8gbGV0IGJ1ZiA9IG51bGxcbi8vIGxldCBtYXRjaCA9IG51bGxcblxuLy8gZnVuY3Rpb24gd2hpdGUoKSB7XG4vLyAgIHdoaWxlICgxKSB7XG4vLyAgICAgbWF0Y2ggPSBidWYubWF0Y2goVF9XSElURVNQQUNFKVxuLy8gICAgIGlmICghbWF0Y2gpIHtcbi8vICAgICAgIHJldHVyblxuLy8gICAgIH0gZWxzZSB7XG4vLyAgICAgICBidWYgPSBidWYuc2xpY2UobWF0Y2hbMF0ubGVuZ3RoKVxuLy8gICAgIH1cbi8vICAgfVxuLy8gfVxuXG4vLyBmdW5jdGlvbiBuZXh0KGNudCA9IDEpIHtcbi8vICAgYnVmID0gYnVmLnNsaWNlKGNudClcbi8vICAgd2hpdGUoKVxuLy8gfVxuXG4vLyAvKlxuLy8gdmFsdWU6IFRfU1RSSU5HXG4vLyAgIHwgVF9OVU1CRVJcbi8vICAgfCBUX1RSVUVcbi8vICAgfCBUX0ZBTFNFXG4vLyAgIHwgVF9OVUxMXG4vLyAgIHwgVF9JTkZJTklUWVxuLy8gICB8IFRfTklORklOSVRZXG4vLyAgIHwgVF9OQU5cbi8vICAgfCBUX1JFR0VYUFxuLy8gICB8IGFycmF5XG4vLyAgIHwgb2JqZWN0XG4vLyAgKi9cbi8vIGZ1bmN0aW9uIHZhbHVlKCkge1xuLy8gICB3aGl0ZSgpXG4vLyAgIG1hdGNoID0gYnVmLm1hdGNoKFRfU1RSSU5HKVxuLy8gICBpZiAobWF0Y2gpIHtcbi8vICAgICBjb25zdCB0ID0gbWF0Y2hbMF1cbi8vICAgICBuZXh0KHQubGVuZ3RoKVxuLy8gICAgIHJldHVybiB0IC8vIC5yZXBsYWNlKC9eXCJ8XCIkL2csIFwiXCIpLnJlcGxhY2UoL1xcXFxcXFwiL2csIFwiXFxcIlwiKVxuLy8gICB9XG4vLyAgIHN3aXRjaCAoYnVmWzBdKSB7XG4vLyAgICAgY2FzZSBcIltcIjpcbi8vICAgICAgcmV0dXJuIGFycmF5KClcbi8vICAgICBjYXNlIFwie1wiOlxuLy8gICAgICByZXR1cm4gb2JqZWN0KClcbi8vICAgfVxuLy8gICBlcnJvcihcInZhbHVlXCIpXG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGFycmF5KCkge1xuLy8gICBuZXh0KCkgLy8gcmVzb2x2ZSBbXG4vLyAgIGlmIChidWZbMF0gPT09IFwiXVwiKSB7IC8vIGVtcHR5IGFycmF5XG4vLyAgICAgbmV4dCgpXG4vLyAgICAgcmV0dXJuIFtdXG4vLyAgIH1cbi8vICAgY29uc3QgcmVzdWx0ID0gW3ZhbHVlKCldXG4vLyAgIHdoaXRlKClcbi8vICAgd2hpbGUgKGJ1ZlswXSA9PT0gXCIsXCIpIHtcbi8vICAgICBuZXh0KClcbi8vICAgICByZXN1bHQucHVzaCh2YWx1ZSgpKVxuLy8gICAgIHdoaXRlKClcbi8vICAgfVxuLy8gICBpZiAoYnVmWzBdID09PSBcIl1cIikge1xuLy8gICAgIG5leHQoKVxuLy8gICAgIHJldHVybiByZXN1bHRcbi8vICAgfVxuLy8gICB0aHJvdyBlcnJvcihcIl1cIilcbi8vIH1cblxuLy8gZnVuY3Rpb24gb2JqZWN0KCkge1xuLy8gICBuZXh0KCkgLy8gcmVzb2x2ZSB7XG4vLyAgIGlmIChidWZbMF0gPT09IFwifVwiKSB7IC8vIGVtcHR5IG9iamVjdFxuLy8gICAgIG5leHQoKVxuLy8gICAgIHJldHVybiB7fVxuLy8gICB9XG4vLyAgIGNvbnN0IHJlc3VsdCA9IG9iamVjdHBhaXIoKVxuLy8gICB3aGl0ZSgpXG4vLyAgIHdoaWxlIChidWZbMF0gPT09IFwiLFwiKSB7XG4vLyAgICAgbmV4dCgpXG4vLyAgICAgT2JqZWN0LmFzc2lnbihyZXN1bHQsIG9iamVjdHBhaXIoKSlcbi8vICAgICB3aGl0ZSgpXG4vLyAgIH1cbi8vICAgaWYgKGJ1ZlswXSA9PT0gXCJ9XCIpIHtcbi8vICAgICBuZXh0KClcbi8vICAgICByZXR1cm4gcmVzdWx0XG4vLyAgIH1cbi8vICAgdGhyb3cgZXJyb3IoXCJ9XCIpXG4vLyB9XG5cbi8vIGZ1bmN0aW9uIG9iamVjdHBhaXIoKSB7XG4vLyAgIG1hdGNoID0gYnVmLm1hdGNoKFRfU1RSSU5HKVxuLy8gICBpZiAobWF0Y2gpIHtcbi8vICAgICBjb25zdCB0ID0gbWF0Y2hbMF1cbi8vICAgICBuZXh0KHQubGVuZ3RoKVxuLy8gICAgIGNvbnN0IGtleSA9IHQucmVwbGFjZSgvXlwifFwiJC9nLCBcIlwiKS5yZXBsYWNlKC9cXFxcXFxcIi9nLCBcIlxcXCJcIilcbi8vICAgICBpZiAoYnVmWzBdID09PSBcIj1cIikge1xuLy8gICAgICAgbmV4dCgpXG4vLyAgICAgICByZXR1cm4ge1trZXldOiB2YWx1ZSgpfVxuLy8gICAgIH1cbi8vICAgICB0aHJvdyBlcnJvcihcIj1cIilcbi8vICAgfVxuLy8gICB0aHJvdyBlcnJvcihcIm9iamVjdCBrZXlcIilcbi8vIH1cblxuLy8gZnVuY3Rpb24gZXJyb3IoZXhwZWN0ZWQpIHtcbi8vICAgdGhyb3cgbmV3IEVycm9yKGBleHBlY3RlZCAke2V4cGVjdGVkfSwgdW5leHBlY3RlZCAke2J1ZlswXX1gKVxuLy8gfVxuXG4vLyBmdW5jdGlvbiBwYXJzZShjdHgpIHtcbi8vICAgYnVmID0gY3R4XG4vLyAgIGNvbnN0IHJlc3VsdCA9IHZhbHVlKClcblxuLy8gICB3aGl0ZSgpXG4vLyAgIGlmIChidWYubGVuZ3RoKSB7XG4vLyAgICAgdGhyb3cgZXJyb3IoXCJFT0ZcIilcbi8vICAgfVxuLy8gICByZXR1cm4gcmVzdWx0XG4vLyB9XG5cbi8vIG1vZHVsZS5leHBvcnRzID0ge1xuLy8gICBwYXJzZSxcbi8vIH1cbiJdfQ==